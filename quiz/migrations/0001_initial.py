# Generated by Django 5.1.1 on 2024-10-25 00:09

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0004_alter_coursefunction_function'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='title of the question.')),
                ('is_active', models.BooleanField(help_text='Soft delete boolean')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_questions', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='last_modified_questions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='Title/text of the choice')),
                ('is_correct', models.BinaryField(default=False, help_text='Define if this is the correct answer to the question')),
                ('is_active', models.BooleanField(help_text='Soft delete boolean')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_choices', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='last_modified_choices', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the quiz (title).', max_length=255)),
                ('description', models.TextField(help_text='Specify what the quiz is all about.')),
                ('required_grade', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(help_text='Soft delete boolean')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_quizes', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='last_modified_quizes', to=settings.AUTH_USER_MODEL)),
                ('related_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.course')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.quiz'),
        ),
        migrations.CreateModel(
            name='UserChoises',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_submited', models.BooleanField(default=False, help_text='Sets if the answer was submited. When submited, only view operations are allowed on the object')),
                ('is_correct', models.BooleanField(default=False)),
                ('date_submited', models.DateTimeField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.choices')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.question')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuizScores',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_submited', models.BooleanField(default=False, help_text='Sets if the quiz was submited. When submited, only view operations are allowed on the object')),
                ('date_submited', models.DateTimeField(null=True)),
                ('score', models.DecimalField(decimal_places=2, help_text='The score of the user on the test, from 1 to 100.', max_digits=3, null=True)),
                ('is_aproved', models.BooleanField(default=False, help_text='Stores if the user has passed the test')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='quiz.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
