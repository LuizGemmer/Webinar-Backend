# Generated by Django 5.1.1 on 2024-10-30 00:57

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='Title/text of the choice')),
                ('is_correct', models.BooleanField(help_text='Define if this is the correct answer to the question')),
                ('is_active', models.BooleanField(help_text='Soft delete boolean')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='title of the question.')),
                ('is_active', models.BooleanField(help_text='Soft delete boolean')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the quiz (title).', max_length=255)),
                ('description', models.TextField(help_text='Specify what the quiz is all about.')),
                ('required_grade', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(help_text='Soft delete boolean')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserChoices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_submited', models.BooleanField(default=False, help_text='Sets if the answer was submited. When submited, only view operations are allowed on the object')),
                ('is_correct', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete boolean')),
                ('date_submited', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuizScores',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_submited', models.BooleanField(default=False, help_text='Sets if the quiz was submited. When submited, only view operations are allowed on the object')),
                ('date_submited', models.DateTimeField(null=True)),
                ('score', models.FloatField(help_text='The score of the user on the test, from 1 to 100.', null=True)),
                ('is_aproved', models.BooleanField(default=False, help_text='Stores if the user has passed the test')),
                ('is_active', models.BooleanField(default=True, help_text='Stores if the user has passed the test')),
            ],
        ),
    ]
